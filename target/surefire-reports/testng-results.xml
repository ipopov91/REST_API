<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-14T22:38:16 MSK" name="UsersSuite" finished-at="2022-06-14T22:38:17 MSK" duration-ms="776">
    <groups>
    </groups>
    <test started-at="2022-06-14T22:38:16 MSK" name="CASE5" finished-at="2022-06-14T22:38:17 MSK" duration-ms="515">
      <class name="tests.usersTests.GetResponseUsersTest">
        <test-method signature="getResponseUsers(pageObjects.user.User,int)[pri:0, instance:tests.usersTests.GetResponseUsersTest@6e171cd7]" started-at="2022-06-14T22:38:16 MSK" name="getResponseUsers" data-provider="parameterIntTestProvider" finished-at="2022-06-14T22:38:17 MSK" duration-ms="515" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[pageObjects.user.User@6403a4a5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [{"id":4,"name":"Patricia Lebsack","username":"Karianne","email":"Julianne.OConner@kory.org","address":{"street":"Hoeger Mall","suite":"Apt. 692","city":"South Elvis","zipcode":"53919-4257","geo":{"lat":"29.4572","lng":"-164.2990"}},"phone":"493-170-9623 x156","website":"kale.biz","company":{"name":"Robel-Corkery","catchPhrase":"Multi-tiered zero tolerance productivity","bs":"transition cutting-edge web services"}}] but found [{"id":5,"name":"Chelsey Dietrich","username":"Kamren","email":"Lucio_Hettinger@annie.ca","address":{"street":"Skiles Walks","suite":"Suite 351","city":"Roscoeview","zipcode":"33263","geo":{"lat":"-31.8129","lng":"62.5342"}},"phone":"(254)954-1289","website":"demarco.info","company":{"name":"Keebler LLC","catchPhrase":"User-centric fault-tolerant solution","bs":"revolutionize end-to-end systems"}}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [{"id":4,"name":"Patricia Lebsack","username":"Karianne","email":"Julianne.OConner@kory.org","address":{"street":"Hoeger Mall","suite":"Apt. 692","city":"South Elvis","zipcode":"53919-4257","geo":{"lat":"29.4572","lng":"-164.2990"}},"phone":"493-170-9623 x156","website":"kale.biz","company":{"name":"Robel-Corkery","catchPhrase":"Multi-tiered zero tolerance productivity","bs":"transition cutting-edge web services"}}] but found [{"id":5,"name":"Chelsey Dietrich","username":"Kamren","email":"Lucio_Hettinger@annie.ca","address":{"street":"Skiles Walks","suite":"Suite 351","city":"Roscoeview","zipcode":"33263","geo":{"lat":"-31.8129","lng":"62.5342"}},"phone":"(254)954-1289","website":"demarco.info","company":{"name":"Keebler LLC","catchPhrase":"User-centric fault-tolerant solution","bs":"revolutionize end-to-end systems"}}]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.usersTests.GetResponseUsersTest.getResponseUsers(GetResponseUsersTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseUsers -->
      </class> <!-- tests.usersTests.GetResponseUsersTest -->
    </test> <!-- CASE5 -->
    <test started-at="2022-06-14T22:38:17 MSK" name="CASE6" finished-at="2022-06-14T22:38:17 MSK" duration-ms="240">
      <class name="tests.usersTests.GetResponseFromUsersWithQueryParamTest">
        <test-method signature="getResponseFromUsersWithQueryParam(java.lang.String,int)[pri:0, instance:tests.usersTests.GetResponseFromUsersWithQueryParamTest@1d9b7cce]" started-at="2022-06-14T22:38:17 MSK" name="getResponseFromUsersWithQueryParam" finished-at="2022-06-14T22:38:17 MSK" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[id]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseFromUsersWithQueryParam -->
      </class> <!-- tests.usersTests.GetResponseFromUsersWithQueryParamTest -->
    </test> <!-- CASE6 -->
  </suite> <!-- UsersSuite -->
  <suite started-at="2022-06-14T22:38:17 MSK" name="APITests" finished-at="2022-06-14T22:38:17 MSK" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- APITests -->
  <suite started-at="2022-06-14T22:38:12 MSK" name="PostsSuite" finished-at="2022-06-14T22:38:16 MSK" duration-ms="3773">
    <groups>
    </groups>
    <test started-at="2022-06-14T22:38:12 MSK" name="CASE1" finished-at="2022-06-14T22:38:14 MSK" duration-ms="2015">
      <class name="tests.postsTests.GetResponseFromPostsTest">
        <test-method signature="getResponseFromPosts(java.lang.String)[pri:0, instance:tests.postsTests.GetResponseFromPostsTest@48e4374]" started-at="2022-06-14T22:38:12 MSK" name="getResponseFromPosts" finished-at="2022-06-14T22:38:14 MSK" duration-ms="2000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[id]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseFromPosts -->
      </class> <!-- tests.postsTests.GetResponseFromPostsTest -->
    </test> <!-- CASE1 -->
    <test started-at="2022-06-14T22:38:14 MSK" name="CASE2" finished-at="2022-06-14T22:38:15 MSK" duration-ms="496">
      <class name="tests.postsTests.GetResponseFromPostsWithQueryParamTest">
        <test-method signature="getResponseFromPostsWithQueryParam(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.postsTests.GetResponseFromPostsWithQueryParamTest@619713e5]" started-at="2022-06-14T22:38:14 MSK" name="getResponseFromPostsWithQueryParam" finished-at="2022-06-14T22:38:15 MSK" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[title]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[body]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[userId]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseFromPostsWithQueryParam -->
      </class> <!-- tests.postsTests.GetResponseFromPostsWithQueryParamTest -->
    </test> <!-- CASE2 -->
    <test started-at="2022-06-14T22:38:15 MSK" name="CASE3" finished-at="2022-06-14T22:38:15 MSK" duration-ms="437">
      <class name="tests.postsTests.GetResponseFromPostsWithIncorrectDataTest">
        <test-method signature="getResponseFromPostsWithIncorrectData(java.lang.String)[pri:0, instance:tests.postsTests.GetResponseFromPostsWithIncorrectDataTest@291ae]" started-at="2022-06-14T22:38:15 MSK" name="getResponseFromPostsWithIncorrectData" finished-at="2022-06-14T22:38:15 MSK" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseFromPostsWithIncorrectData -->
      </class> <!-- tests.postsTests.GetResponseFromPostsWithIncorrectDataTest -->
    </test> <!-- CASE3 -->
    <test started-at="2022-06-14T22:38:15 MSK" name="CASE4" finished-at="2022-06-14T22:38:16 MSK" duration-ms="794">
      <class name="tests.postsTests.PostDataTest">
        <test-method signature="postAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)[pri:0, instance:tests.postsTests.PostDataTest@1ea9f6af]" started-at="2022-06-14T22:38:15 MSK" name="postAdd" finished-at="2022-06-14T22:38:16 MSK" duration-ms="794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[body]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[userId]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postAdd -->
      </class> <!-- tests.postsTests.PostDataTest -->
    </test> <!-- CASE4 -->
  </suite> <!-- PostsSuite -->
</testng-results>
